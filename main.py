# Form implementation generated from reading ui file 'ssisui.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from pathlib import Path
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QIcon, QColor, QRegularExpressionValidator
from PyQt6.QtWidgets import QApplication, QMainWindow, QGraphicsDropShadowEffect, QHeaderView
from PyQt6.QtCore import QRegularExpression
import sys
import csv


class Ui_MainPage(object):
    def setupUi(self, MainPage):
        MainPage.setObjectName("MainPage")
        MainPage.setFixedSize(1491, 751)
        font = QtGui.QFont()
        font.setPointSize(8)
        MainPage.setFont(font)
        MainPage.setStyleSheet(Path('MainStyle.qss').read_text())

        ##-------------------------------------START OF ADD STUDENT PANEL-------------------------------------
        self.AddStudent = QtWidgets.QFrame(parent=MainPage)
        self.AddStudent.setGeometry(QtCore.QRect(1050, 80, 411, 271))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.AddStudent.setFont(font)
        self.AddStudent.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AddStudent.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AddStudent.setObjectName("AddStudent")
        self.AddStudent.setGraphicsEffect(QGraphicsDropShadowEffect(blurRadius=50, color=QColor("#afafaf")))       
        self.AddStudentText = QtWidgets.QLabel(parent=self.AddStudent)
        self.AddStudentText.setGeometry(QtCore.QRect(10, 10, 151, 16))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.AddStudentText.setFont(font)
        self.AddStudentText.setObjectName("AddStudentText")
        self.IDText = QtWidgets.QLabel(parent=self.AddStudent)
        self.IDText.setGeometry(QtCore.QRect(30, 40, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.IDText.setFont(font)
        self.IDText.setObjectName("IDText")
        self.FNameText = QtWidgets.QLabel(parent=self.AddStudent)
        self.FNameText.setGeometry(QtCore.QRect(30, 70, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.FNameText.setFont(font)
        self.FNameText.setObjectName("FNameText")
        self.LNameText = QtWidgets.QLabel(parent=self.AddStudent)
        self.LNameText.setGeometry(QtCore.QRect(30, 100, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.LNameText.setFont(font)
        self.LNameText.setObjectName("LNameText")
        self.YLevelText = QtWidgets.QLabel(parent=self.AddStudent)
        self.YLevelText.setGeometry(QtCore.QRect(30, 160, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.YLevelText.setFont(font)
        self.YLevelText.setObjectName("YLevelText")
        self.IDTB = QtWidgets.QLineEdit(parent=self.AddStudent)
        self.IDTB.setGeometry(QtCore.QRect(150, 40, 231, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.IDTB.setFont(font)
        self.IDTB.setObjectName("IDTB")
        self.GenderDD = QtWidgets.QComboBox(parent=self.AddStudent)
        self.GenderDD.setGeometry(QtCore.QRect(150, 130, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.GenderDD.setFont(font)
        self.GenderDD.setObjectName("GenderDD")
        self.GenderDD.addItems(["","Male", "Female"])
        self.GenderText = QtWidgets.QLabel(parent=self.AddStudent)
        self.GenderText.setGeometry(QtCore.QRect(30, 130, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.GenderText.setFont(font)
        self.GenderText.setObjectName("GenderText")
        self.YLevelDD = QtWidgets.QComboBox(parent=self.AddStudent)
        self.YLevelDD.setGeometry(QtCore.QRect(150, 160, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.YLevelDD.setFont(font)
        self.YLevelDD.setObjectName("YLevelDD")
        self.YLevelDD.addItems(["","1", "2", "3", "4"])
        self.FNameTB = QtWidgets.QLineEdit(parent=self.AddStudent)
        self.FNameTB.setGeometry(QtCore.QRect(150, 70, 231, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.FNameTB.setFont(font)
        self.FNameTB.setPlaceholderText("")
        self.FNameTB.setObjectName("FNameTB")
        self.LNameTB = QtWidgets.QLineEdit(parent=self.AddStudent)
        self.LNameTB.setGeometry(QtCore.QRect(150, 100, 231, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.LNameTB.setFont(font)
        self.LNameTB.setPlaceholderText("")
        self.LNameTB.setObjectName("LNameTB")
        self.PCodeText = QtWidgets.QLabel(parent=self.AddStudent)
        self.PCodeText.setGeometry(QtCore.QRect(30, 190, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.PCodeText.setFont(font)
        self.PCodeText.setObjectName("PCodeText")
        self.PCodeDD = QtWidgets.QComboBox(parent=self.AddStudent)
        self.PCodeDD.setGeometry(QtCore.QRect(150, 190, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.PCodeDD.setFont(font)
        self.PCodeDD.setObjectName("PCodeDD")
        self.PCodeDD.addItem("")
        self.AddStudentButton = QtWidgets.QPushButton(parent=self.AddStudent)
        self.AddStudentButton.setGeometry(QtCore.QRect(280, 230, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.AddStudentButton.setFont(font)
        self.AddStudentButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.AddStudentButton.setDisabled(True)
        self.AddStudentButton.setObjectName("AddStudentButton")
        ##-------------------------------------END OF ADD STUDENT PANEL-------------------------------------

         ##-------------------------------------START OF ADD PROGRAM PANEL-------------------------------------
        self.AddProgram = QtWidgets.QFrame(parent=MainPage)
        self.AddProgram.setGeometry(QtCore.QRect(1050, 540, 411, 181))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.AddProgram.setFont(font)
        self.AddProgram.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AddProgram.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AddProgram.setObjectName("AddProgram")
        self.AddProgram.setGraphicsEffect(QGraphicsDropShadowEffect(blurRadius=50, color=QColor("#afafaf")))  
        self.AddProgramText = QtWidgets.QLabel(parent=self.AddProgram)
        self.AddProgramText.setGeometry(QtCore.QRect(10, 10, 151, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.AddProgramText.setFont(font)
        self.AddProgramText.setObjectName("AddProgramText")
        self.PCodeText2 = QtWidgets.QLabel(parent=self.AddProgram)
        self.PCodeText2.setGeometry(QtCore.QRect(30, 40, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.PCodeText2.setFont(font)
        self.PCodeText2.setObjectName("PCodeText2")
        self.PCodeTB = QtWidgets.QLineEdit(parent=self.AddProgram)
        self.PCodeTB.setGeometry(QtCore.QRect(150, 40, 221, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.PCodeTB.setFont(font)
        self.PCodeTB.setObjectName("PCodeTB")
        self.PNameText = QtWidgets.QLabel(parent=self.AddProgram)
        self.PNameText.setGeometry(QtCore.QRect(30, 70, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.PNameText.setFont(font)
        self.PNameText.setObjectName("PNameText")
        self.PCollCodeText = QtWidgets.QLabel(parent=self.AddProgram)
        self.PCollCodeText.setGeometry(QtCore.QRect(30, 100, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.PCollCodeText.setFont(font)
        self.PCollCodeText.setObjectName("PCollCodeText")
        self.PNameTB = QtWidgets.QLineEdit(parent=self.AddProgram)
        self.PNameTB.setGeometry(QtCore.QRect(150, 70, 221, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.PNameTB.setFont(font)
        self.PNameTB.setText("")
        self.PNameTB.setObjectName("PNameTB")
        self.AddProgramButton = QtWidgets.QPushButton(parent=self.AddProgram)
        self.AddProgramButton.setGeometry(QtCore.QRect(280, 140, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.AddProgramButton.setFont(font)
        self.AddProgramButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.AddProgramButton.setDisabled(True)
        self.AddProgramButton.setObjectName("AddProgramButton")
        self.PCollCodeDD = QtWidgets.QComboBox(parent=self.AddProgram)
        self.PCollCodeDD.setGeometry(QtCore.QRect(150, 100, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.PCollCodeDD.setFont(font)
        self.PCollCodeDD.setObjectName("PCollCodeDD")
        self.PCollCodeDD.addItem("")
        ##-------------------------------------END OF ADD PROGRAM PANEL-------------------------------------

        ##-------------------------------------START OF ADD COLLEGE PANEL-------------------------------------
        self.AddCollege = QtWidgets.QFrame(parent=MainPage)
        self.AddCollege.setGeometry(QtCore.QRect(1050, 370, 411, 151))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.AddCollege.setFont(font)
        self.AddCollege.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.AddCollege.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.AddCollege.setObjectName("AddCollege")
        self.AddCollege.setGraphicsEffect(QGraphicsDropShadowEffect(blurRadius=50, color=QColor("#afafaf")))  
        self.AddCollegeText = QtWidgets.QLabel(parent=self.AddCollege)
        self.AddCollegeText.setGeometry(QtCore.QRect(10, 10, 151, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.AddCollegeText.setFont(font)
        self.AddCollegeText.setObjectName("AddCollegeText")
        self.CCodeText = QtWidgets.QLabel(parent=self.AddCollege)
        self.CCodeText.setGeometry(QtCore.QRect(30, 40, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.CCodeText.setFont(font)
        self.CCodeText.setObjectName("CCodeText")
        self.CCodeTB = QtWidgets.QLineEdit(parent=self.AddCollege)
        self.CCodeTB.setGeometry(QtCore.QRect(150, 40, 231, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.CCodeTB.setFont(font)
        self.CCodeTB.setText("")
        self.CCodeTB.setObjectName("CCodeTB")
        self.CNameText = QtWidgets.QLabel(parent=self.AddCollege)
        self.CNameText.setGeometry(QtCore.QRect(30, 70, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.CNameText.setFont(font)
        self.CNameText.setObjectName("CNameText")
        self.CNameTB = QtWidgets.QLineEdit(parent=self.AddCollege)
        self.CNameTB.setGeometry(QtCore.QRect(150, 70, 231, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(10)
        self.CNameTB.setFont(font)
        self.CNameTB.setText("")
        self.CNameTB.setObjectName("CNameTB")
        self.AddCollegeButton = QtWidgets.QPushButton(parent=self.AddCollege)
        self.AddCollegeButton.setGeometry(QtCore.QRect(280, 110, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.AddCollegeButton.setFont(font)
        self.AddCollegeButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.AddCollegeButton.setObjectName("AddCollegeButton")
        ##-------------------------------------END OF ADD COLLEGE PANEL-------------------------------------

        ##-------------------------------------START OF DATABASE PANEL-------------------------------------
        self.Database = QtWidgets.QFrame(parent=MainPage)
        self.Database.setGeometry(QtCore.QRect(30, 80, 1001, 641))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.Database.setFont(font)
        self.Database.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Database.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Database.setObjectName("Database")
        self.Database.setGraphicsEffect(QGraphicsDropShadowEffect(blurRadius=50, color=QColor("#afafaf")))  
        self.SearchText = QtWidgets.QLabel(parent=self.Database)
        self.SearchText.setGeometry(QtCore.QRect(20, 20, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.SearchText.setFont(font)
        self.SearchText.setObjectName("SearchText")
        self.SearchDD = QtWidgets.QComboBox(parent=self.Database)
        self.SearchDD.setGeometry(QtCore.QRect(100, 20, 81, 22))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.SearchDD.setFont(font)
        self.SearchDD.setObjectName("SearchDD")
        self.SearchTB = QtWidgets.QLineEdit(parent=self.Database)
        self.SearchTB.setGeometry(QtCore.QRect(190, 20, 211, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.SearchTB.setFont(font)
        self.SearchTB.setPlaceholderText("")
        self.SearchTB.setObjectName("SearchTB")
        self.SearchButton = QtWidgets.QPushButton(parent=self.Database)
        self.SearchButton.setGeometry(QtCore.QRect(410, 20, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.SearchButton.setFont(font)
        self.SearchButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.SearchButton.setStyleSheet(Path('SearchButton.qss').read_text())
        self.SearchButton.setObjectName("SearchButton")
        self.SortText = QtWidgets.QLabel(parent=self.Database)
        self.SortText.setGeometry(QtCore.QRect(20, 50, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.SortText.setFont(font)
        self.SortText.setObjectName("SortText")
        self.SortDD = QtWidgets.QComboBox(parent=self.Database)
        self.SortDD.setGeometry(QtCore.QRect(100, 50, 81, 22))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.SortDD.setFont(font)
        self.SortDD.setObjectName("SortDD")
        self.SortDD.addItem("")
        self.SortDD.addItem("")
        self.SortDD.addItem("")
        self.SortDD.addItem("")
        self.SortDD.addItem("")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.Database)
        self.tableWidget.setGeometry(QtCore.QRect(20, 90, 961, 491))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.tableWidget.setFont(font)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Roboto")
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Roboto")
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Roboto")
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Roboto")
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Roboto")
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Roboto")
        item.setFont(font)

        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.EditStudentButton = QtWidgets.QPushButton(parent=self.Database)
        self.EditStudentButton.setEnabled(False)
        self.EditStudentButton.setGeometry(QtCore.QRect(20, 590, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.EditStudentButton.setFont(font)
        self.EditStudentButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.EditStudentButton.setObjectName("EditStudentButton")
        self.DeleteStudentButton = QtWidgets.QPushButton(parent=self.Database)
        self.DeleteStudentButton.setEnabled(False)
        self.DeleteStudentButton.setGeometry(QtCore.QRect(150, 590, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(14)
        self.DeleteStudentButton.setFont(font)
        self.DeleteStudentButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.DeleteStudentButton.setObjectName("DeleteStudentButton")
        ##-------------------------------------END OF DATABASE PANEL-------------------------------------

        self.Heading = QtWidgets.QFrame(parent=MainPage)
        self.Heading.setGeometry(QtCore.QRect(0, 0, 1491, 51))
        self.Heading.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.Heading.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.Heading.setObjectName("Heading")
        self.HeadingTitle = QtWidgets.QLabel(parent=self.Heading)
        self.HeadingTitle.setGeometry(QtCore.QRect(40, 10, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        font.setPointSize(12)
        self.HeadingTitle.setFont(font)
        self.HeadingTitle.setObjectName("HeadingTitle")

        self.retranslateUi(MainPage)
        QtCore.QMetaObject.connectSlotsByName(MainPage)

    def retranslateUi(self, MainPage):
        _translate = QtCore.QCoreApplication.translate
        MainPage.setWindowTitle(_translate("MainPage", "Dialog"))
        self.AddStudentText.setText(_translate("MainPage", "Add Student"))
        self.IDText.setText(_translate("MainPage", "ID #"))
        self.FNameText.setText(_translate("MainPage", "First Name"))
        self.LNameText.setText(_translate("MainPage", "Last Name"))
        self.YLevelText.setText(_translate("MainPage", "Year Level"))
        self.GenderText.setText(_translate("MainPage", "Gender"))
        self.PCodeText.setText(_translate("MainPage", "Program Code"))
        self.AddStudentButton.setText(_translate("MainPage", "Add Student"))
        self.AddProgramText.setText(_translate("MainPage", "Add Program"))
        self.PCodeText2.setText(_translate("MainPage", "Code"))
        self.PCodeTB.setPlaceholderText(_translate("MainPage", "ex. BSCS"))
        self.PNameText.setText(_translate("MainPage", "Program Name"))
        self.PCollCodeText.setText(_translate("MainPage", "College Code"))
        self.PNameTB.setPlaceholderText(_translate("MainPage", "ex. Bachelor of Science in Computer Science"))
        self.AddProgramButton.setText(_translate("MainPage", "Add Program"))
        self.AddCollegeText.setText(_translate("MainPage", "Add College"))
        self.CCodeText.setText(_translate("MainPage", "Code"))
        self.CCodeTB.setPlaceholderText(_translate("MainPage", "ex. CCS"))
        self.CNameText.setText(_translate("MainPage", "College Name"))
        self.CNameTB.setPlaceholderText(_translate("MainPage", "ex. College of Computer Studies"))
        self.AddCollegeButton.setText(_translate("MainPage", "Add College"))
        self.SearchText.setText(_translate("MainPage", "Search by:"))
        self.SearchButton.setText(_translate("MainPage", "Search"))
        self.SortText.setText(_translate("MainPage", "Sort by:"))
        self.SortDD.setItemText(0, _translate("MainPage", "ID#"))
        self.SortDD.setItemText(1, _translate("MainPage", "First Name"))
        self.SortDD.setItemText(2, _translate("MainPage", "Last Name"))
        self.SortDD.setItemText(3, _translate("MainPage", "Year Level"))
        self.SortDD.setItemText(4, _translate("MainPage", "Program Code"))

        self.EditStudentButton.setText(_translate("MainPage", "Edit Student"))
        self.DeleteStudentButton.setText(_translate("MainPage", "Delete Student"))
        self.HeadingTitle.setText(_translate("MainPage", "Student Information System"))


# Main Window Class
class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_MainPage()
        self.ui.setupUi(self)
        self.setWindowTitle('Simple Student Information System')
        self.setWindowIcon(QIcon('./StudentIcon.png'))

        self.setupValidators()
        self.openStudentCSV()
        self.TableFormat()
        self.AddStudentButtonState()
        self.AddCollegeButtonState()
        self.AddProgramButtonState()
        self.setupConnections()
        self.ui.AddStudentButton.clicked.connect(self.AddStudentUpdateTable)
        self.ui.AddCollegeButton.clicked.connect(self.AddCollegeUpdateTable)
        self.ui.AddProgramButton.clicked.connect(self.AddProgramUpdateTable)
        self.PopulateCollegeCode()
        self.PopulateProgramCode()

    def setupConnections(self):
        self.ui.IDTB.textChanged.connect(self.AddStudentButtonState)
        self.ui.FNameTB.textChanged.connect(self.AddStudentButtonState)
        self.ui.LNameTB.textChanged.connect(self.AddStudentButtonState)
        self.ui.GenderDD.currentTextChanged.connect(self.AddStudentButtonState)
        self.ui.YLevelDD.currentTextChanged.connect(self.AddStudentButtonState)
        self.ui.PCodeDD.currentTextChanged.connect(self.AddStudentButtonState)

        self.ui.CCodeTB.textChanged.connect(self.AddCollegeButtonState)
        self.ui.CNameTB.textChanged.connect(self.AddCollegeButtonState)
        
        self.ui.PCodeTB.textChanged.connect(self.AddProgramButtonState)
        self.ui.PNameTB.textChanged.connect(self.AddProgramButtonState)
        self.ui.PCollCodeDD.currentTextChanged.connect(self.AddProgramButtonState)

    def remove_empty_item(self):
        combo = self.sender() 
        if combo.itemText(0) == "":
            combo.removeItem(0)

    def openStudentCSV(self):
            with open("Student.csv", "r") as StudentData:
                reader = csv.reader(StudentData)
                data = list(reader)

                if data:
                    self.ui.tableWidget.setRowCount(len(data) - 1)
                    self.ui.tableWidget.setColumnCount(len(data[0]))
                    self.ui.tableWidget.setHorizontalHeaderLabels(data[0])

                    for row_idx, row in enumerate(data[1:]):
                        for col_idx, cell in enumerate(row):
                            item = QtWidgets.QTableWidgetItem(cell)
                            self.ui.tableWidget.setItem(row_idx, col_idx, item)

    def TableFormat(self):
        self.ui.tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Fixed)
        self.ui.tableWidget.verticalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Fixed)
        self.ui.tableWidget.horizontalHeader().setHighlightSections(False)
        self.ui.tableWidget.verticalHeader().setHighlightSections(False)
        self.ui.tableWidget.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.SingleSelection)
        self.ui.tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.ui.tableWidget.setColumnWidth(0, 70)
        self.ui.tableWidget.setColumnWidth(1, 250)
        self.ui.tableWidget.setColumnWidth(2, 150)
        self.ui.tableWidget.setColumnWidth(3, 70)
        self.ui.tableWidget.setColumnWidth(4, 70)
        self.ui.tableWidget.setColumnWidth(5, 100)
        self.ui.tableWidget.setAlternatingRowColors(True)
    
    def AddStudentButtonState(self):
        student_id = self.ui.IDTB.text()
        first_name = self.ui.FNameTB.text()
        last_name = self.ui.LNameTB.text()
        gender = self.ui.GenderDD.currentText()
        year_level = self.ui.YLevelDD.currentText()
        program_code = self.ui.PCodeDD.currentText()

        if student_id and first_name and last_name and gender and year_level and program_code:
            self.ui.AddStudentButton.setDisabled(False)
        else:
            self.ui.AddStudentButton.setDisabled(True)
    def AddCollegeButtonState(self):
        college_code = self.ui.CCodeTB.text()
        college_name = self.ui.CNameTB.text()

        if college_code and college_name:
            self.ui.AddCollegeButton.setDisabled(False)
        else:
            self.ui.AddCollegeButton.setDisabled(True)
    def AddProgramButtonState(self):
        program_code = self.ui.PCodeTB.text()
        program_name = self.ui.PNameTB.text()
        pcollege_code = self.ui.PCollCodeDD.currentText()

        if program_code and program_name and pcollege_code:
            self.ui.AddProgramButton.setDisabled(False)
        else:
            self.ui.AddProgramButton.setDisabled(True)
              
    def AddStudentUpdateTable(self):
        with open("Student.csv", "a", newline='') as InputStudentData:
            writer = csv.writer(InputStudentData)
            writer.writerow([
                self.ui.IDTB.text(),
                self.ui.FNameTB.text().title(),
                self.ui.LNameTB.text().title(),
                self.ui.GenderDD.currentText(),
                self.ui.YLevelDD.currentText(),
                self.ui.PCodeDD.currentText()
            ])
        self.ui.IDTB.clear()
        self.ui.FNameTB.clear()
        self.ui.LNameTB.clear()
        self.ui.GenderDD.setCurrentIndex(0)
        self.ui.YLevelDD.setCurrentIndex(0)
        self.ui.PCodeDD.setCurrentIndex(0)
        self.ui.AddStudentButton.setDisabled(True)
        self.openStudentCSV()
    def AddCollegeUpdateTable(self):
        with open("College.csv", "a", newline='') as InputCollegeData:
            writer = csv.writer(InputCollegeData)
            writer.writerow([
                self.ui.CCodeTB.text().upper(),
                self.ui.CNameTB.text().title()
            ])
            self.ui.CCodeTB.clear()
            self.ui.CNameTB.clear()
            self.ui.AddCollegeButton.setDisabled(True)
        self.PopulateCollegeCode()   
    def AddProgramUpdateTable(self):
        with open("Program.csv", "a", newline='') as InputProgramData:
            writer = csv.writer(InputProgramData)
            writer.writerow([
                self.ui.PCodeTB.text().upper(),
                self.ui.PNameTB.text().title(),
                self.ui.PCollCodeDD.currentText()
            ])
            self.ui.PCodeTB.clear()
            self.ui.PNameTB.clear()
            self.ui.PCollCodeDD.setCurrentIndex(0)
            self.ui.AddProgramButton.setDisabled(True)
        self.PopulateProgramCode()

    def PopulateCollegeCode(self):
        self.SortCollegebyCode()
        self.ui.PCollCodeDD.clear()
        self.ui.PCollCodeDD.addItem("")  
        with open("College.csv", "r") as CollegeCode:
            reader = csv.reader(CollegeCode)
            data = list(reader) 

            if len(data) <= 1:
                return 

            header = data[0]
            college_code_idx = header.index("College Code")

            for row in data[1:]: 
                if len(row) > college_code_idx: 
                    collegecode_data = row[college_code_idx]
                    self.ui.PCollCodeDD.addItem(collegecode_data)
    def PopulateProgramCode(self):
        self.SortProgrambyCode()
        self.ui.PCodeDD.clear()
        self.ui.PCodeDD.addItem("")
        with open("Program.csv", "r") as ProgramCode:
            reader = csv.reader(ProgramCode)
            data = list(reader)

            if len(data) <= 1:
                return

            header = data[0]
            program_code_idx = header.index("Program Code")

            for row in data[1:]:
                if len(row) > program_code_idx:
                    programcode_data = row[program_code_idx]
                    self.ui.PCodeDD.addItem(programcode_data)

    def SortCollegebyCode(self):
        with open("College.csv", "r", newline='') as file:
            reader = list(csv.reader(file))
            header = reader[0]
            rows = reader[1:]
            ccode_idx = header.index("College Code")
            rows.sort(key=lambda row: row[ccode_idx])

        with open("College.csv", "w", newline='') as writefile:
            writer = csv.writer(writefile)
            writer.writerow(header)
            writer.writerows(rows)
 
    def SortProgrambyCode(self):
        with open("Program.csv", "r", newline='') as file:
            reader = list(csv.reader(file))
            header = reader[0]
            rows = reader[1:]
            pcode_idx = header.index("Program Code")
            rows.sort(key = lambda row: row[pcode_idx])
        
        with open("Program.csv", "w", newline='') as writefile:
            writer = csv.writer(writefile)
            writer.writerow(header)
            writer.writerows(rows)
    
    def setupValidators(self):
        code_validator = QRegularExpressionValidator(QRegularExpression("[A-Za-z]+"))
        self.ui.CCodeTB.setValidator(code_validator)
        id_validator = QRegularExpressionValidator(QRegularExpression("[0-9-]+"))
        self.ui.IDTB.setValidator(id_validator)
        name_validator = QRegularExpressionValidator(QRegularExpression("[A-Za-z ]+"))
        self.ui.FNameTB.setValidator(name_validator)
        self.ui.LNameTB.setValidator(name_validator)
# Main Function to Run the Application
def main():
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec())


# Entry Point
if __name__ == "__main__":
    main()